# template-pack-and-sign-all-nugets.yaml
# Pack and sign all nuget packages needed for our builds

parameters:
  BuildConfiguration: 'release'

steps:

# Pack and sign Microsoft.Identity.Web
- template: template-pack-and-sign-nuget.yaml
  parameters:
    BuildConfiguration: ${{ parameters.BuildConfiguration }}
    ProjectRootPath: '$(Build.SourcesDirectory)\src\Microsoft.Identity.Web'
    AssemblyName: 'Microsoft.Identity.Web'
    HasRefAssembly: 'false'

# Pack and sign Microsoft.Identity.Web.UI
- template: template-pack-and-sign-nuget.yaml
  parameters:
    BuildConfiguration: ${{ parameters.BuildConfiguration }}
    ProjectRootPath: '$(Build.SourcesDirectory)\src\Microsoft.Identity.Web.UI'
    AssemblyName: 'Microsoft.Identity.Web.UI*'

# Pack and sign Microsoft.Identity.Web.MicrosoftGraph
- template: template-pack-and-sign-nuget.yaml
  parameters:
    BuildConfiguration: ${{ parameters.BuildConfiguration }}
    ProjectRootPath: '$(Build.SourcesDirectory)\src\Microsoft.Identity.Web.MicrosoftGraph'
    AssemblyName: 'Microsoft.Identity.Web.MicrosoftGraph*'

# Pack and sign Microsoft.Identity.Web.MicrosoftGraphBeta
- template: template-pack-and-sign-nuget.yaml
  parameters:
    BuildConfiguration: ${{ parameters.BuildConfiguration }}
    ProjectRootPath: '$(Build.SourcesDirectory)\src\Microsoft.Identity.Web.MicrosoftGraphBeta'
    AssemblyName: 'Microsoft.Identity.Web.MicrosoftGraphBeta*'

# Pack and sign Microsoft.Identity.TokenCache
- template: template-pack-and-sign-nuget.yaml
  parameters:
    BuildConfiguration: ${{ parameters.BuildConfiguration }}
    ProjectRootPath: '$(Build.SourcesDirectory)\src\Microsoft.Identity.Web.TokenCache'
    AssemblyName: 'Microsoft.Identity.Web.TokenCache*'

# Pack and sign Microsoft.Identity.Certificate
- template: template-pack-and-sign-nuget.yaml
  parameters:
    BuildConfiguration: ${{ parameters.BuildConfiguration }}
    ProjectRootPath: '$(Build.SourcesDirectory)\src\Microsoft.Identity.Web.Certificate'
    AssemblyName: 'Microsoft.Identity.Web.Certificate*'

# Pack and sign Microsoft.Identity.Web.ProjectTemplates
- template: template-pack-and-sign-nuget.yaml
  parameters:
    BuildConfiguration: ${{ parameters.BuildConfiguration }}
    ProjectRootPath: '$(Build.SourcesDirectory)\ProjectTemplates'
    AssemblyName: 'AspNetCoreMicrosoftIdentityWebProjectTemplates'

# Copy all packages out to staging
- task: CopyFiles@2
  displayName: 'Copy Files from $(Build.SourcesDirectory) to: $(Build.ArtifactStagingDirectory)\packages'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**\*nupkg'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\packages'
    flattenFolders: true

# Sign all final nuget packages in the staging directory
- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'Sign Packages'
  inputs:
    ConnectedServiceName: 'IDDP Code Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)\packages'
    Pattern: '*nupkg'
    signConfigType: inlineSignParams
    inlineOperation: |
     [
         {
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetSign",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetVerify",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         }
     ]
    SessionTimeout: 20
    VerboseLogin: true
  timeoutInMinutes: 5
